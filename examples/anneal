#!/usr/bin/env python3

import neal
import json
import argparse
from pathlib import Path

if __name__ == '__main__':
    parser = argparse.ArgumentParser("anneal")
    parser.add_argument("path", help="Path for QUBO Problem in JSON format.")

    args = parser.parse_args()

    path = Path(args.path)

    Q = {}
    c = 0.0

    with path.open(mode="r", encoding="utf8") as file:
        qubo_json = json.load(file)

    for key in qubo_json:
        

        if not key:
            c += float(qubo_json[key])
        else:
            i = tuple(sorted(map(int, key.split(" "))))

            if i in Q:
                Q[i] += float(qubo_json[key])
            else:
                Q[i] = float(qubo_json[key])

    sampler = neal.SimulatedAnnealingSampler()
    sampling = sampler.sample_qubo(Q, num_reads=1000, num_sweeps=1000)

    S = {}

    for y, e, n in sampling.record:
        k = tuple(y)
        if k in S:
            S[k]["samples"] += int(n)
        else:
            S[k] = {"states": list(map(int, k)), "samples": int(n), "energy": float(e) + c}
    
    with open("anneal.json", mode="w") as file:
        json.dump(list(S.values()), file)
        
    exit(0)